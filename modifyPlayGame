import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class PlayGame implements ActionListener{
	
	private Player []players;
	private YutPan board;
	private int pieceNum; //말의 수
	private int playerNum = 2; // 플레이어 수
	//private int turn = 0; 
	private int firstPlayer = 0; // 선공 플레이어 여기다가 저장
	private int gameWinner = -1;
	private int gameResult = 0;
	private Player nowPlayer;
	private int control = 1;
	
	PlayGame(int mal, int miniGameWinner)
	{
		firstPlayer = miniGameWinner;
		players = new Player[playerNum];
		for(int i=1; i<2; i++)
		{
			players[i] = new Player(i,mal);
		}
		pieceNum = mal;
		board = new YutBoard(this); // YutBoard에서 버튼이 클릭 되었다는 정보를 받기위해 본인 객체를 보냄
		
		for(int i=0; i<playerNum; i++) {
			board.setplayerInfo(i, players[i].playerPiece());
		}
	}
	
	int checkFinish() 
	{
		for(int i=0;i<playerNum;i++)
		{
			if(players[i].getPoint() == pieceNum)
			{
				players = null; //players 초기화
				board.finishMessage(i); //끝났을 때 메세지
				return i; //i번째 플레이어 승리
			}
		}
		return -1;//게임 아직 안끝남
	}
	
	void ThrowYut()
	{ //Phaze1ThrowYut->ThrowYut
		if(control == 1) {
			result = 0;
			nowPlayer = players[turn];//현재 플레이어 순서 바꾸기
			if(nowPlayer.getPieces().size()==0 && nowPlayer.getPieceNum()>0) { //판위에 말이 없고 대기중인 말이 있다면 0,0에 새로 만든다.
				boardMessage("판 위에 올라가 있는 말 없음");
			}
			else
			{
				boardMessage("");
			}
			board.changePlayer(turn);//윷놀이 플레이어 출력 변환
			result = Yoot.throwing();//던지기 버튼 클릭
			board.printResult(result);//던진 결과 화면에 출력
			
			for(int i=0; i<playerNum; i++) {
				board.setplayerInfo(i, players[i].playerPiece()); //
			}

			control = 3;
		}
	}
